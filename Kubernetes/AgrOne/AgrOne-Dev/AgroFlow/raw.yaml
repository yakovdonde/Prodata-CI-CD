apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-db-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:13
        env:
        - name: POSTGRES_USER
          value: airflow
        - name: POSTGRES_PASSWORD
          value: airflow
        - name: POSTGRES_DB
          value: airflow
        ports:
        - containerPort: 5432
        volumeMounts:
        - name: postgres-db-storage
          mountPath: /var/lib/postgresql/data
      volumes:
      - name: postgres-db-storage
        persistentVolumeClaim:
          claimName: postgres-db-pvc

---

apiVersion: v1
kind: Service
metadata:
  name: postgres
spec:
  selector:
    app: postgres
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-data-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:latest
        ports:
        - containerPort: 6379
        volumeMounts:
        - name: redis-data-storage
          mountPath: /data
      volumes:
      - name: redis-data-storage
        persistentVolumeClaim:
          claimName: redis-data-pvc

---

apiVersion: v1
kind: Service
metadata:
  name: redis
spec:
  selector:
    app: redis
  ports:
    - protocol: TCP
      port: 6379
      targetPort: 6379

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: airflow-webserver
spec:
  replicas: 1
  selector:
    matchLabels:
      app: airflow-webserver
  template:
    metadata:
      labels:
        app: airflow-webserver
    spec:
      containers:
      - name: airflow-webserver
        image: apache/airflow:2.8.1
        env:
        - name: AIRFLOW__CORE__EXECUTOR
          value: CeleryExecutor
        - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
          value: postgresql+psycopg2://airflow:airflow@postgres/airflow
        - name: AIRFLOW__CELERY__RESULT_BACKEND
          value: db+postgresql://airflow:airflow@postgres/airflow
        - name: AIRFLOW__CELERY__BROKER_URL
          value: redis://:@redis:6379/0
        - name: AIRFLOW__CORE__FERNET_KEY
          value: ''
        - name: AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION
          value: 'true'
        - name: AIRFLOW__CORE__LOAD_EXAMPLES
          value: 'true'
        - name: AIRFLOW__API__AUTH_BACKENDS
          value: 'airflow.api.auth.backend.basic_auth,airflow.api.auth.backend.session'
        - name: AIRFLOW__SCHEDULER__ENABLE_HEALTH_CHECK
          value: 'true'
        - name: _PIP_ADDITIONAL_REQUIREMENTS
          value: ''
        ports:
        - containerPort: 8080
      volumes:
      - name: airflow-dags
        mountPath: /opt/airflow/dags
      - name: airflow-logs
        mountPath: /opt/airflow/logs
      - name: airflow-config
        mountPath: /opt/airflow/config
      - name: airflow-plugins
        mountPath: /opt/airflow/plugins
      - name: airflow-env
        mountPath: /opt/airflow/.env
  dependsOn:
    - redis
    - postgres

---

apiVersion: v1
kind: Service
metadata:
  name: airflow-webserver
spec:
  selector:
    app: airflow-webserver
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: airflow-scheduler
spec:
  replicas: 1
  selector:
    matchLabels:
      app: airflow-scheduler
  template:
    metadata:
      labels:
        app: airflow-scheduler
    spec:
      containers:
      - name: airflow-scheduler
        image: apache/airflow:2.8.1
        env:
        - name: AIRFLOW__CORE__EXECUTOR
          value: CeleryExecutor
        - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
          value: postgresql+psycopg2://airflow:airflow@postgres/airflow
        - name: AIRFLOW__CELERY__RESULT_BACKEND
          value: db+postgresql://airflow:airflow@postgres/airflow
        - name: AIRFLOW__CELERY__BROKER_URL
          value: redis://:@redis:6379/0
        - name: AIRFLOW__CORE__FERNET_KEY
          value: ''
        - name: AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION
          value: 'true'
        - name: AIRFLOW__CORE__LOAD_EXAMPLES
          value: 'true'
        - name: AIRFLOW__API__AUTH_BACKENDS
          value: 'airflow.api.auth.backend.basic_auth,airflow.api.auth.backend.session'
        - name: AIRFLOW__SCHEDULER__ENABLE_HEALTH_CHECK
          value: 'true'
        - name: _PIP_ADDITIONAL_REQUIREMENTS
          value: ''
  dependsOn:
    - redis
    - postgres

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: airflow-worker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: airflow-worker
  template:
    metadata:
      labels:
        app: airflow-worker
    spec:
      containers:
      - name: airflow-worker
        image: apache/airflow:2.8.1
        env:
        - name: AIRFLOW__CORE__EXECUTOR
          value: CeleryExecutor
        - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
          value: postgresql+psycopg2://airflow:airflow@postgres/airflow
        - name: AIRFLOW__CELERY__RESULT_BACKEND
          value: db+postgresql://airflow:airflow@postgres/airflow
        - name: AIRFLOW__CELERY__BROKER_URL
          value: redis://:@redis:6379/0
        - name: AIRFLOW__CORE__FERNET_KEY
          value: ''
        - name: AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION
          value: 'true'
        - name: AIRFLOW__CORE__LOAD_EXAMPLES
          value: 'true'
        - name: AIRFLOW__API__AUTH_BACKENDS
          value: 'airflow.api.auth.backend.basic_auth,airflow.api.auth.backend.session'
        - name: AIRFLOW__SCHEDULER__ENABLE_HEALTH_CHECK
          value: 'true'
        - name: _PIP_ADDITIONAL_REQUIREMENTS
          value: ''
  dependsOn:
    - redis
    - postgres

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: airflow-triggerer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: airflow-triggerer
  template:
    metadata:
      labels:
        app: airflow-triggerer
    spec:
      containers:
      - name: airflow-triggerer
        image: apache/airflow:2.8.1
        env:
        - name: AIRFLOW__CORE__EXECUTOR
          value: CeleryExecutor
        - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
          value: postgresql+psycopg2://airflow:airflow@postgres/airflow
        - name: AIRFLOW__CELERY__RESULT_BACKEND
          value: db+postgresql://airflow:airflow@postgres/airflow
        - name: AIRFLOW__CELERY__BROKER_URL
          value: redis://:@redis:6379/0
        - name: AIRFLOW__CORE__FERNET_KEY
          value: ''
        - name: AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION
          value: 'true'
        - name: AIRFLOW__CORE__LOAD_EXAMPLES
          value: 'true'
        - name: AIRFLOW__API__AUTH_BACKENDS
          value: 'airflow.api.auth.backend.basic_auth,airflow.api.auth.backend.session'
        - name: AIRFLOW__SCHEDULER__ENABLE_HEALTH_CHECK
          value: 'true'
        - name: _PIP_ADDITIONAL_REQUIREMENTS
          value: ''
  dependsOn:
    - redis
    - postgres

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: airflow-init
spec:
  replicas: 1
  selector:
    matchLabels:
      app: airflow-init
  template:
    metadata:
      labels:
        app: airflow-init
    spec:
      containers:
      - name: airflow-init
        image: apache/airflow:2.8.1
        env:
        - name: AIRFLOW__CORE__EXECUTOR
          value: CeleryExecutor
        - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
          value: postgresql+psycopg2://airflow:airflow@postgres/airflow
        - name: AIRFLOW__CELERY__RESULT_BACKEND
          value: db+postgresql://airflow:airflow@postgres/airflow
        - name: AIRFLOW__CELERY__BROKER_URL
          value: redis://:@redis:6379/0
        - name: AIRFLOW__CORE__FERNET_KEY
          value: ''
        - name: AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION
          value: 'true'
        - name: AIRFLOW__CORE__LOAD_EXAMPLES
          value: 'true'
        - name: AIRFLOW__API__AUTH_BACKENDS
          value: 'airflow.api.auth.backend.basic_auth,airflow.api.auth.backend.session'
        - name: AIRFLOW__SCHEDULER__ENABLE_HEALTH_CHECK
          value: 'true'
        - name: _PIP_ADDITIONAL_REQUIREMENTS
          value: ''
        - name: _AIRFLOW_DB_MIGRATE
          value: 'true'
        - name: _AIRFLOW_WWW_USER_CREATE
          value: 'true'
        - name: _AIRFLOW_WWW_USER_USERNAME
          value: airflow
        - name: _AIRFLOW_WWW_USER_PASSWORD
          value: airflow
        - name: _PIP_ADDITIONAL_REQUIREMENTS
          value: ''
      volumes:
      - name: airflow-source
        mountPath: /sources

---

apiVersion: v1
kind: Service
metadata:
  name: airflow-init
spec:
  selector:
    app: airflow-init
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: airflow-cli
spec:
  replicas: 1
  selector:
    matchLabels:
      app: airflow-cli
  template:
    metadata:
      labels:
        app: airflow-cli
    spec:
      containers:
      - name: airflow-cli
        image: apache/airflow:2.8.1
        env:
        - name: AIRFLOW__CORE__EXECUTOR
          value: CeleryExecutor
        - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
          value: postgresql+psycopg2://airflow:airflow@postgres/airflow
        - name: AIRFLOW__CELERY__RESULT_BACKEND
          value: db+postgresql://airflow:airflow@postgres/airflow
        - name: AIRFLOW__CELERY__BROKER_URL
          value: redis://:@redis:6379/0
        - name: AIRFLOW__CORE__FERNET_KEY
          value: ''
        - name: AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION
          value: 'true'
        - name: AIRFLOW__CORE__LOAD_EXAMPLES
          value: 'true'
        - name: AIRFLOW__API__AUTH_BACKENDS
          value: 'airflow.api.auth.backend.basic_auth,airflow.api.auth.backend.session'
        - name: AIRFLOW__SCHEDULER__ENABLE_HEALTH_CHECK
          value: 'true'
        - name: _PIP_ADDITIONAL_REQUIREMENTS
          value: ''
      command:
      - bash
      - -c
      - airflow

---

apiVersion: v1
kind: Service
metadata:
  name: airflow-cli
spec:
  selector:
    app: airflow-cli
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: flower
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flower
  template:
    metadata:
      labels:
        app: flower
    spec:
      containers:
      - name: flower
        image: apache/airflow:2.8.1
        env:
        - name: AIRFLOW__CORE__EXECUTOR
          value: CeleryExecutor
        - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
          value: postgresql+psycopg2://airflow:airflow@postgres/airflow
        - name: AIRFLOW__CELERY__RESULT_BACKEND
          value: db+postgresql://airflow:airflow@postgres/airflow
        - name: AIRFLOW__CELERY__BROKER_URL
          value: redis://:@redis:6379/0
        - name: AIRFLOW__CORE__FERNET_KEY
          value: ''
        - name: AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION
          value: 'true'
        - name: AIRFLOW__CORE__LOAD_EXAMPLES
          value: 'true'
        - name: AIRFLOW__API__AUTH_BACKENDS
          value: 'airflow.api.auth.backend.basic_auth,airflow.api.auth.backend.session'
        - name: AIRFLOW__SCHEDULER__ENABLE_HEALTH_CHECK
          value: 'true'
        - name: _PIP_ADDITIONAL_REQUIREMENTS
          value: ''
      command:
      - celery
      - flower
  dependsOn:
    - redis
    - postgres

---

apiVersion: v1
kind: Service
metadata:
  name: flower
spec:
  selector:
    app: flower
  ports:
    - protocol: TCP
      port: 5555
      targetPort: 5555
